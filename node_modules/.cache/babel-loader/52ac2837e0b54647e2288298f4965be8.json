{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/Project3/src/unMatch.js\";\nimport react from 'react';\nimport './Match.css';\nimport { socket } from './App.js';\nimport { ListMatches } from './List.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function unMatch() {\n  var mockNames = ['name1', 'name2', 'name3', 'name4'];\n  var mockEmails = ['email1', 'email2', 'email3', 'email4'];\n  var activeMatch = 'name1';\n\n  function ChangeChat(name) {\n    activeMatch = name;\n  }\n\n  function ListMatches(props) {\n    /*#__PURE__*/\n    _jsxDEV(\"tr\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"List\",\n        onClick: () => ChangeChat(props.name),\n        children: /*#__PURE__*/_jsxDEV(\"td\", {\n          children: props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 3\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Chat\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Match\",\n        children: activeMatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Matches\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: mockNames.map((value, index) => /*#__PURE__*/_jsxDEV(ListMatches, {\n          name: value\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }, this);\n}","map":{"version":3,"sources":["/home/ec2-user/environment/Project3/src/unMatch.js"],"names":["react","socket","ListMatches","unMatch","mockNames","mockEmails","activeMatch","ChangeChat","name","props","map","value","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,WAAT,QAA4B,WAA5B;;AAEA,OAAO,SAASC,OAAT,GAAkB;AACvB,MAAIC,SAAS,GAAG,CAAC,OAAD,EAAS,OAAT,EAAiB,OAAjB,EAAyB,OAAzB,CAAhB;AACA,MAAIC,UAAU,GAAG,CAAC,QAAD,EAAU,QAAV,EAAmB,QAAnB,EAA4B,QAA5B,CAAjB;AACA,MAAIC,WAAW,GAAG,OAAlB;;AAEA,WAASC,UAAT,CAAoBC,IAApB,EAAyB;AACvBF,IAAAA,WAAW,GAAGE,IAAd;AACD;;AACD,WAASN,WAAT,CAAqBO,KAArB,EAA2B;AAC3B;AAAA;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAG,MAApB;AAA2B,QAAA,OAAO,EAAE,MAAKF,UAAU,CAACE,KAAK,CAACD,IAAP,CAAnD;AAAA,+BACE;AAAA,oBAAKC,KAAK,CAACD;AAAX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAKC;;AAEC,sBAEF;AAAK,IAAA,SAAS,EAAG,MAAjB;AAAA,4BAEE;AAAK,MAAA,SAAS,EAAG,MAAjB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAG,OAAjB;AAAA,kBACGF;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAQE;AAAK,MAAA,SAAS,EAAE,SAAhB;AAAA,6BACA;AAAA,kBACGF,SAAS,CAACM,GAAV,CAAc,CAACC,KAAD,EAAQC,KAAR,kBACP,QAAC,WAAD;AAAyB,UAAA,IAAI,EAAED;AAA/B,WAAkBC,KAAlB;AAAA;AAAA;AAAA;AAAA,gBADP;AADH;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFE;AAsBH","sourcesContent":["import react from 'react';\nimport './Match.css';\nimport { socket } from './App.js';\nimport { ListMatches } from './List.js';\n\nexport function unMatch(){\n  var mockNames = ['name1','name2','name3','name4'];\n  var mockEmails = ['email1','email2','email3','email4'];\n  var activeMatch = 'name1';\n\n  function ChangeChat(name){\n    activeMatch = name;\n  }\n  function ListMatches(props){\n  <tr>\n    <button className = \"List\" onClick={() =>ChangeChat(props.name)}>\n      <td>{props.name}</td>\n    </button>\n    </tr>\n  }\n  \n    return(\n      \n  <div className = \"Main\">\n    \n    <div className = \"Chat\">\n      <div className = \"Match\">\n        {activeMatch}\n      </div>\n    </div>\n    \n    <div className =\"Matches\">\n    <table>\n      {mockNames.map((value, index) => (\n              <ListMatches key={index} name={value} />\n            ))}\n    </table>\n    </div>\n    \n  </div>\n    \n    )  \n    \n}\n\n"]},"metadata":{},"sourceType":"module"}